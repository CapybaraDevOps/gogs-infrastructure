pipeline {
    agent any
     tools {
		jfrog 'jfrog-cli'
        go '1.22.4'
        dockerTool 'docker'
	}
    parameters {
        choice(name: 'ENV', choices: ['DEV', 'STAGE', 'PROD'], description: 'Deployment environment')
        string(name: 'BUILDNAME', defaultValue: 'gogs', description: 'Build Name')
    }
    environment {
        ARTIFACTORY_URL = 'https://docker.capybara.pp.ua:443/artifactory'
    }
    stages {
        stage('Checkout') {
             steps {
                script {
                    git branch: 'jira-67-create-jenkins-pipelines-for-gogs-app-deployment', credentialsId: 'gitcreds', url: 'git@github.com:CapybaraDevOps/gogs-infrastructure.git'
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    sh '''
                    docker --version
                    git clone --depth 1 https://github.com/gogs/gogs.git gogs
                    ls -la
                    cd gogs
                    ls -la
                    go build -o gogs
                    ls -la
                    docker build -f /var/lib/jenkins/workspace/GOGS_Build/jenkins/Dockerfile -t gogs:${BUILD_NUMBER} .
                    '''
                }
            }
        }
        stage('Docker Push') {
         steps {
                script {

                    def repo = ''
                    switch (params.ENV) {
                        case 'dev':
                            repo = "${env.ARTIFACTORY_URL}/dev-gogs-go-local"
                            break
                        case 'stage':
                            repo = "${env.ARTIFACTORY_URL}/stage-gogs-go-local"
                            break
                        case 'prod':
                            repo = "${env.ARTIFACTORY_URL}/prod-gogs-go-local"
                            break
                        default:
                            error "Invalid repository selection"
                    }

                    def imageTag = "${repo}/gogs:$BUILD_NUMBER"
                    sh "docker tag gogs:$BUILD_NUMBER ${imageTag}"
                    
                    
                    withCredentials([usernamePassword(credentialsId: 'dcr-p-creds', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD https://docker.capybara.pp.ua"
                        sh "docker push ${imageTag}"
                        sh "docker logout ${env.ARTIFACTORY_URL}"
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
            sh 'docker system prune -a -f'
            sh 'go clean -cache'
        }
    }
}